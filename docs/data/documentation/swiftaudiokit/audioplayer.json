{
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "AudioPlayer",
      "type" : "codeVoice"
    },
    {
      "text" : " instance is used to play ",
      "type" : "text"
    },
    {
      "code" : "AudioPlayerItem",
      "type" : "codeVoice"
    },
    {
      "text" : ". It’s an easy to use AVPlayer with simple methods to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "handle the whole playing audio process.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "c:@M@SwiftAudioKit@objc(cs)AudioPlayer",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AudioPlayer"
      }
    ],
    "modules" : [
      {
        "name" : "SwiftAudioKit"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "AudioPlayer"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "AudioPlayer"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "AudioPlayer"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can get events (such as state change or time observation) by registering a delegate.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftAudioKit\/objc(cs)NSObject"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftAudioKit\/objc(pl)NSObject",
        "doc:\/\/SwiftAudioKit\/s7CVarArgP",
        "doc:\/\/SwiftAudioKit\/s28CustomDebugStringConvertibleP",
        "doc:\/\/SwiftAudioKit\/s23CustomStringConvertibleP",
        "doc:\/\/SwiftAudioKit\/SQ",
        "doc:\/\/SwiftAudioKit\/SH"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "anchor" : "Initializers",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/init()",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/init(nowPlayableService:)"
      ],
      "title" : "Initializers"
    },
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/adjustQualityAfterInterruptionCount",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/adjustQualityAutomatically",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/adjustQualityTimeInternal",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/bufferingStrategy",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItem",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemDuration",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemIndexInQueue",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemLoadedAhead",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemLoadedRange",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemProgression",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemSeekableRange",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentQuality",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/defaultQuality",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/delegate",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/hasNext",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/hasPrevious",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/items",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/maximumConnectionLossTime",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/maximumRetryCount",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/mode",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/preferredBufferDurationBeforePlayback",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/preferredForwardBufferDuration",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/rate",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/resumeAfterConnectionLoss",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/resumeAfterInterruption",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/retryTimeout",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/seekingBehavior-swift.property",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/setNowPlayingMetadata",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/state",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/volume"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/add(item:)",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/add(items:)",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/next()",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/nextOrStop()",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/pause()",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/play(item:)",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/play(items:startAtIndex:)",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/previous()",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/removeItem(at:)",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/resume()",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/seek(to:byAdaptingTimeToFitSeekableRanges:toleranceBefore:toleranceAfter:completionHandler:)",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/seekToSeekableRangeEnd(padding:completionHandler:)",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/seekToSeekableRangeStart(padding:completionHandler:)",
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/stop()"
      ],
      "title" : "Instance Methods"
    },
    {
      "anchor" : "Enumerations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/SeekingBehavior-swift.enum"
      ],
      "title" : "Enumerations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftaudiokit\/audioplayer"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftAudioKit/SH": {
  "identifier" : "doc:\/\/SwiftAudioKit\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://SwiftAudioKit/SQ": {
  "identifier" : "doc:\/\/SwiftAudioKit\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftAudioKit",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "AudioPlayer",
      "type" : "codeVoice"
    },
    {
      "text" : " instance is used to play ",
      "type" : "text"
    },
    {
      "code" : "AudioPlayerItem",
      "type" : "codeVoice"
    },
    {
      "text" : ". It’s an easy to use AVPlayer with simple methods to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "handle the whole playing audio process.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AudioPlayer"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AudioPlayer"
    }
  ],
  "role" : "symbol",
  "title" : "AudioPlayer",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/SeekingBehavior-swift.enum": {
  "abstract" : [
    {
      "text" : "Defines how to behave when the user is seeking through the lockscreen or the control center.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SeekingBehavior"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/SeekingBehavior-swift.enum",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SeekingBehavior"
    }
  ],
  "role" : "symbol",
  "title" : "AudioPlayer.SeekingBehavior",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/seekingbehavior-swift.enum"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/add(item:)": {
  "abstract" : [
    {
      "text" : "Adds an item at the end of the queue. If queue is empty and player isn’t playing, the behaviour will be similar",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to ",
      "type" : "text"
    },
    {
      "code" : "play(item:)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "add"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "item"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B4ItemC",
      "text" : "AudioItem"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/add(item:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "add(item:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/add(item:)"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/add(items:)": {
  "abstract" : [
    {
      "text" : "Adds items at the end of the queue. If the queue is empty and player isn’t playing, the behaviour will be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "similar to ",
      "type" : "text"
    },
    {
      "code" : "play(items:)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "add"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "items"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B4ItemC",
      "text" : "AudioItem"
    },
    {
      "kind" : "text",
      "text" : "])"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/add(items:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "add(items:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/add(items:)"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/adjustQualityAfterInterruptionCount": {
  "abstract" : [
    {
      "text" : "Defines the maximum number of interruption to have within the ",
      "type" : "text"
    },
    {
      "code" : "adjustQualityTimeInterval",
      "type" : "codeVoice"
    },
    {
      "text" : " delay before",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "downgrading the quality. Default value is 5.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "adjustQualityAfterInterruptionCount"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/adjustQualityAfterInterruptionCount",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "adjustQualityAfterInterruptionCount",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/adjustqualityafterinterruptioncount"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/adjustQualityAutomatically": {
  "abstract" : [
    {
      "text" : "Defines whether the player should automatically adjust sound quality based on the number of interruption before",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a delay and the maximum number of interruption whithin this delay. Default value is ",
      "type" : "text"
    },
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "adjustQualityAutomatically"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/adjustQualityAutomatically",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "adjustQualityAutomatically",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/adjustqualityautomatically"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/adjustQualityTimeInternal": {
  "abstract" : [
    {
      "text" : "Defines the delay within which the player wait for an interruption before upgrading the quality. Default value",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is 10 minutes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "adjustQualityTimeInternal"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/adjustQualityTimeInternal",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "adjustQualityTimeInternal",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/adjustqualitytimeinternal"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/bufferingStrategy": {
  "abstract" : [
    {
      "text" : "Defines the buffering strategy used to determine how much to buffer before starting playback",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bufferingStrategy"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B23PlayerBufferingStrategyO",
      "text" : "AudioPlayerBufferingStrategy"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/bufferingStrategy",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bufferingStrategy",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/bufferingstrategy"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/currentItem": {
  "abstract" : [
    {
      "text" : "The current item being played.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "currentItem"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B4ItemC",
      "text" : "AudioItem"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItem",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "currentItem",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/currentitem"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/currentItemDuration": {
  "abstract" : [
    {
      "text" : "The current item duration or nil if no item or unknown duration.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "currentItemDuration"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemDuration",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "currentItemDuration",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/currentitemduration"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/currentItemIndexInQueue": {
  "abstract" : [
    {
      "text" : "The current item index in queue.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "currentItemIndexInQueue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemIndexInQueue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "currentItemIndexInQueue",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/currentitemindexinqueue"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/currentItemLoadedAhead": {
  "abstract" : [
    {
      "text" : "The time interval ahead that is currently loaded.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "currentItemLoadedAhead"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemLoadedAhead",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "currentItemLoadedAhead",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/currentitemloadedahead"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/currentItemLoadedRange": {
  "abstract" : [
    {
      "text" : "The current loaded range.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "currentItemLoadedRange"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit9TimeRangea",
      "text" : "TimeRange"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemLoadedRange",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "currentItemLoadedRange",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/currentitemloadedrange"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/currentItemProgression": {
  "abstract" : [
    {
      "text" : "The current item progression or nil if no item.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "currentItemProgression"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemProgression",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "currentItemProgression",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/currentitemprogression"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/currentItemSeekableRange": {
  "abstract" : [
    {
      "text" : "The current seekable range.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "currentItemSeekableRange"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit9TimeRangea",
      "text" : "TimeRange"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentItemSeekableRange",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "currentItemSeekableRange",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/currentitemseekablerange"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/currentQuality": {
  "abstract" : [
    {
      "text" : "The current quality being played.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "currentQuality"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B7QualityO",
      "text" : "AudioQuality"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/currentQuality",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "currentQuality",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/currentquality"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/defaultQuality": {
  "abstract" : [
    {
      "text" : "Defines the default quality used to play. Default value is ",
      "type" : "text"
    },
    {
      "code" : ".medium",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultQuality"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B7QualityO",
      "text" : "AudioQuality"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/defaultQuality",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultQuality",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/defaultquality"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/delegate": {
  "abstract" : [
    {
      "text" : "The delegate that will be called upon events.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "delegate"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B14PlayerDelegateP",
      "text" : "AudioPlayerDelegate"
    },
    {
      "kind" : "text",
      "text" : ")?"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/delegate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "delegate",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/delegate"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/hasNext": {
  "abstract" : [
    {
      "text" : "A boolean value indicating whether there is a next item to play or not.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hasNext"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/hasNext",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hasNext",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/hasnext"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/hasPrevious": {
  "abstract" : [
    {
      "text" : "A boolean value indicating whether there is a previous item to play or not.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hasPrevious"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/hasPrevious",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hasPrevious",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/hasprevious"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/init()": {
  "abstract" : [
    {
      "text" : "Initializes a new ",
      "type" : "text"
    },
    {
      "code" : "AudioPlayer",
      "type" : "codeVoice"
    },
    {
      "text" : " instance with default settings.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/init()"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/init(nowPlayableService:)": {
  "abstract" : [
    {
      "text" : "Initializes a new ",
      "type" : "text"
    },
    {
      "code" : "AudioPlayer",
      "type" : "codeVoice"
    },
    {
      "text" : " instance with a ",
      "type" : "text"
    },
    {
      "code" : "NowPlayableService",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "convenience"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "nowPlayableService"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit18NowPlayableServiceC",
      "text" : "NowPlayableService"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/init(nowPlayableService:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(nowPlayableService:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/init(nowplayableservice:)"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/items": {
  "abstract" : [
    {
      "text" : "The items in the queue if any.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "items"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B4ItemC",
      "text" : "AudioItem"
    },
    {
      "kind" : "text",
      "text" : "]?"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/items",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "items",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/items"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/maximumConnectionLossTime": {
  "abstract" : [
    {
      "text" : "Defines the maximum to wait after a connection loss before putting the player to Stopped mode and cancelling",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the resume. Default value is 60 seconds.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "maximumConnectionLossTime"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/maximumConnectionLossTime",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "maximumConnectionLossTime",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/maximumconnectionlosstime"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/maximumRetryCount": {
  "abstract" : [
    {
      "text" : "The maximum number of interruption before putting the player to Stopped mode. Default value is 10.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "maximumRetryCount"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/maximumRetryCount",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "maximumRetryCount",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/maximumretrycount"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/mode": {
  "abstract" : [
    {
      "text" : "Defines the mode of the player. Default is ",
      "type" : "text"
    },
    {
      "code" : ".Normal",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mode"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B10PlayerModeV",
      "text" : "AudioPlayerMode"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/mode",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "mode",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/mode"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/next()": {
  "abstract" : [
    {
      "text" : "Plays next item in the queue.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "next"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/next()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "next()",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/next()"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/nextOrStop()": {
  "abstract" : [
    {
      "text" : "Plays the next item in the queue and if there isn’t, the player will stop.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "nextOrStop"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/nextOrStop()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "nextOrStop()",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/nextorstop()"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/pause()": {
  "abstract" : [
    {
      "text" : "Pauses the player.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pause"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/pause()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pause()",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/pause()"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/play(item:)": {
  "abstract" : [
    {
      "text" : "Plays an item.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "play"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "item"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B4ItemC",
      "text" : "AudioItem"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/play(item:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "play(item:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/play(item:)"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/play(items:startAtIndex:)": {
  "abstract" : [
    {
      "text" : "Creates a queue according to the current mode and plays it.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "play"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "items"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B4ItemC",
      "text" : "AudioItem"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "startAtIndex"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/play(items:startAtIndex:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "play(items:startAtIndex:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/play(items:startatindex:)"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/preferredBufferDurationBeforePlayback": {
  "abstract" : [
    {
      "text" : "Defines the preferred buffer duration in seconds before playback begins. Defaults to 60.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Works on iOS\/tvOS 10+ when ",
      "type" : "text"
    },
    {
      "code" : "bufferingStrategy",
      "type" : "codeVoice"
    },
    {
      "text" : " is ",
      "type" : "text"
    },
    {
      "code" : ".playWhenPreferredBufferDurationFull",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "preferredBufferDurationBeforePlayback"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/preferredBufferDurationBeforePlayback",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "preferredBufferDurationBeforePlayback",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/preferredbufferdurationbeforeplayback"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/preferredForwardBufferDuration": {
  "abstract" : [
    {
      "text" : "Defines the preferred size of the forward buffer for the underlying ",
      "type" : "text"
    },
    {
      "code" : "AVPlayerItem",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Works on iOS\/tvOS 10+, default is 0, which lets ",
      "type" : "text"
    },
    {
      "code" : "AVPlayer",
      "type" : "codeVoice"
    },
    {
      "text" : " decide.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "preferredForwardBufferDuration"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/preferredForwardBufferDuration",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "preferredForwardBufferDuration",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/preferredforwardbufferduration"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/previous()": {
  "abstract" : [
    {
      "text" : "Plays previous item in the queue or rewind current item.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "previous"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/previous()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "previous()",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/previous()"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/rate": {
  "abstract" : [
    {
      "text" : "Defines the rate of the player. Default value is 1.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rate"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sf",
      "text" : "Float"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/rate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rate",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/rate"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/removeItem(at:)": {
  "abstract" : [
    {
      "text" : "Removes an item at a specific index in the queue.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeItem"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/removeItem(at:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeItem(at:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/removeitem(at:)"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/resume()": {
  "abstract" : [
    {
      "text" : "Resumes the player.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "resume"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/resume()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "resume()",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/resume()"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/resumeAfterConnectionLoss": {
  "abstract" : [
    {
      "text" : "Defines whether the player should resume after a connection loss or not. Default value is ",
      "type" : "text"
    },
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "resumeAfterConnectionLoss"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/resumeAfterConnectionLoss",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "resumeAfterConnectionLoss",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/resumeafterconnectionloss"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/resumeAfterInterruption": {
  "abstract" : [
    {
      "text" : "Defines whether the player should resume after a system interruption or not. Default value is ",
      "type" : "text"
    },
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "resumeAfterInterruption"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/resumeAfterInterruption",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "resumeAfterInterruption",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/resumeafterinterruption"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/retryTimeout": {
  "abstract" : [
    {
      "text" : "The delay to wait before cancelling last retry and retrying. Default value is 10 seconds.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "retryTimeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/retryTimeout",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "retryTimeout",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/retrytimeout"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/seek(to:byAdaptingTimeToFitSeekableRanges:toleranceBefore:toleranceAfter:completionHandler:)": {
  "abstract" : [
    {
      "text" : "Seeks to a specific time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "seek"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "byAdaptingTimeToFitSeekableRanges"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "toleranceBefore"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@SA@CMTime",
      "text" : "CMTime"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "toleranceAfter"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@SA@CMTime",
      "text" : "CMTime"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completionHandler"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/seek(to:byAdaptingTimeToFitSeekableRanges:toleranceBefore:toleranceAfter:completionHandler:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "seek(to:byAdaptingTimeToFitSeekableRanges:toleranceBefore:toleranceAfter:completionHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/seek(to:byadaptingtimetofitseekableranges:tolerancebefore:toleranceafter:completionhandler:)"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/seekToSeekableRangeEnd(padding:completionHandler:)": {
  "abstract" : [
    {
      "text" : "Seeks forward as far as possible.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "seekToSeekableRangeEnd"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "padding"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completionHandler"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/seekToSeekableRangeEnd(padding:completionHandler:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "seekToSeekableRangeEnd(padding:completionHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/seektoseekablerangeend(padding:completionhandler:)"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/seekToSeekableRangeStart(padding:completionHandler:)": {
  "abstract" : [
    {
      "text" : "Seeks backwards as far as possible.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "seekToSeekableRangeStart"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "padding"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@T@NSTimeInterval",
      "text" : "TimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completionHandler"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/seekToSeekableRangeStart(padding:completionHandler:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "seekToSeekableRangeStart(padding:completionHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/seektoseekablerangestart(padding:completionhandler:)"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/seekingBehavior-swift.property": {
  "abstract" : [
    {
      "text" : "Defines the rate behavior of the player when the backward\/forward buttons are pressed. Default value",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is ",
      "type" : "text"
    },
    {
      "code" : "multiplyRate(2)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "seekingBehavior"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@M@SwiftAudioKit@objc(cs)AudioPlayer",
      "text" : "AudioPlayer"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B6PlayerC15SeekingBehaviorO",
      "text" : "SeekingBehavior"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/seekingBehavior-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "seekingBehavior",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/seekingbehavior-swift.property"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/setNowPlayingMetadata": {
  "abstract" : [
    {
      "text" : "A Boolean value that determines whether the Now Playing metadata should be set.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setNowPlayingMetadata"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/setNowPlayingMetadata",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "setNowPlayingMetadata",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/setnowplayingmetadata"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/state": {
  "abstract" : [
    {
      "text" : "The current state of the player.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "state"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:13SwiftAudioKit0B11PlayerStateO",
      "text" : "AudioPlayerState"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/state",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "state",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/state"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/stop()": {
  "abstract" : [
    {
      "text" : "Stops the player and clear the queue.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stop"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/stop()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stop()",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/stop()"
},
"doc://SwiftAudioKit/documentation/SwiftAudioKit/AudioPlayer/volume": {
  "abstract" : [
    {
      "text" : "Defines the volume of the player. ",
      "type" : "text"
    },
    {
      "code" : "1.0",
      "type" : "codeVoice"
    },
    {
      "text" : " means 100% and ",
      "type" : "text"
    },
    {
      "code" : "0.0",
      "type" : "codeVoice"
    },
    {
      "text" : " is 0%.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "volume"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sf",
      "text" : "Float"
    }
  ],
  "identifier" : "doc:\/\/SwiftAudioKit\/documentation\/SwiftAudioKit\/AudioPlayer\/volume",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "volume",
  "type" : "topic",
  "url" : "\/documentation\/swiftaudiokit\/audioplayer\/volume"
},
"doc://SwiftAudioKit/objc(cs)NSObject": {
  "identifier" : "doc:\/\/SwiftAudioKit\/objc(cs)NSObject",
  "title" : "ObjectiveC.NSObject",
  "type" : "unresolvable"
},
"doc://SwiftAudioKit/objc(pl)NSObject": {
  "identifier" : "doc:\/\/SwiftAudioKit\/objc(pl)NSObject",
  "title" : "ObjectiveC.NSObjectProtocol",
  "type" : "unresolvable"
},
"doc://SwiftAudioKit/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/SwiftAudioKit\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
},
"doc://SwiftAudioKit/s28CustomDebugStringConvertibleP": {
  "identifier" : "doc:\/\/SwiftAudioKit\/s28CustomDebugStringConvertibleP",
  "title" : "Swift.CustomDebugStringConvertible",
  "type" : "unresolvable"
},
"doc://SwiftAudioKit/s7CVarArgP": {
  "identifier" : "doc:\/\/SwiftAudioKit\/s7CVarArgP",
  "title" : "Swift.CVarArg",
  "type" : "unresolvable"
}
}
}